{"version":3,"sources":["utils/request.js","components/Message.js","utils/evebt-bus.js","components/SignIn.js","components/SignUp.js","components/Skeleton.js","components/Draggable.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["isDev","process","checkStatus","response","status","error","Error","statusText","handleResponseData","data","ret","headers","arguments","length","undefined","code","_callee","url","body","options","toast","_args","regenerator_default","a","wrap","_context","prev","next","concat","fetch","Object","objectSpread","method","Content-Type","credentials","JSON","stringify","sent","json","abrupt","stop","_callee2","_context2","request","postJSON","get","classes","message","display","alignItems","success","backgroundColor","green","red","info","blue","warning","amber","variantIcon","react_default","createElement","CheckCircle_default","Warning_default","Error_default","Info_default","Message","handleClose","_this","props","onClose","_this$props","this","open","type","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent_default","style","id","action","IconButton_default","key","aria-label","color","onClick","Close_default","React","Component","EventBus","classCallCheck","events","prototype","emit","e","_len","args","Array","_key","isArray","i","apply","addListener","func","push","eventBus","SignIn","state","username","password","snackbar","setState","handleChange","name","event","defineProperty","target","value","handleLogin","_this$state","setTimeout","history","t0","msg","Message_Message","assign","className","TextField_default","label","onChange","margin","variant","autoComplete","Button_default","size","SignUp","handleSignUp","Skeleton","Drag","possibleConstructorReturn","getPrototypeOf","call","index","newValue","produce","draft","items","content","toggleEdit","tagName","editable","handleToggle","item","done","asyncToGenerator","mark","handleCreate","newItem","Date","toString","unshift","handleSave","_callee3","postData","_context3","map","n","notes","btnSave","handleDelete","_callee4","_context4","splice","findIndex","onDragEnd","bind","assertThisInitialized","result","destination","list","startIndex","endIndex","from","_result$splice","removed","slicedToArray","reorder","source","_","isEqual","formatData","_context5","_this2","react_beautiful_dnd_esm","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","padding","grid","boxSizing","border","borderRadius","background","borderColor","boxShadow","multiline","rowsMax","fullWidth","Save_default","Delete_default","float","Check_default","textDecoration","Fab_default","Add_default","droppableId","droppableProps","isDraggingOver","width","maxWidth","placeholder","ButtonAppBar","isLoggedIn","logout","console","log","logEle","react_router_dom","to","root","AppBar_default","position","Toolbar_default","Typography_default","grow","react_router","path","exact","component","withStyles","flexGrow","menuButton","marginLeft","marginRight","theme","createMuiTheme","typography","useNextVariants","palette","primary","secondary","main","contrastText","App","styles","Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","href","origin","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7d84f430.chunk.js","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nconst isDev = process.env.NODE_ENV === 'development'\r\n\r\nfunction checkStatus(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response\r\n    }\r\n\r\n    const error = new Error(response.statusText)\r\n    error.response = response\r\n    throw error\r\n}\r\n\r\nfunction handleResponseData(data, toast = true) {\r\n    const ret = {\r\n        data,\r\n        headers: {},\r\n    }\r\n\r\n    // 如果错误码 !== 0 默认弹出 toast\r\n    if (toast && ret.data && ret.data.code !== 0) {\r\n        throw ret.data\r\n    }\r\n\r\n    return ret.data.data\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nconst request = {\r\n    postJSON,\r\n    get,\r\n}\r\n\r\nasync function postJSON(url, body, options = {}, toast = true) {\r\n    url = isDev ? url : `http://118.24.146.34:8770${url}`\r\n    const response = await fetch(url, {\r\n        ...options,\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(body),\r\n    })\r\n\r\n    checkStatus(response)\r\n\r\n    const data = await response.json()\r\n\r\n    return handleResponseData(data, toast)\r\n}\r\n\r\nasync function get(url) {\r\n    url = isDev ? url : `http://118.24.146.34:8770${url}`\r\n\r\n    const response = await fetch(url, { credentials: 'include' })\r\n\r\n    checkStatus(response)\r\n\r\n    const data = await response.json()\r\n\r\n    return handleResponseData(data)\r\n}\r\n\r\nexport default request\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport green from '@material-ui/core/colors/green'\r\nimport amber from '@material-ui/core/colors/amber'\r\nimport red from '@material-ui/core/colors/red'\r\nimport blue from '@material-ui/core/colors/blue'\r\n\r\nconst classes = {\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: red[500],\r\n    },\r\n    info: {\r\n        backgroundColor: blue[900],\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n}\r\n\r\nconst variantIcon = {\r\n    success: <CheckCircleIcon />,\r\n    warning: <WarningIcon />,\r\n    error: <ErrorIcon />,\r\n    info: <InfoIcon />,\r\n}\r\n\r\nexport default class Message extends React.Component {\r\n    handleClose = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    render() {\r\n        const { open, message, type } = this.props\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                autoHideDuration={3000}\r\n                onClose={this.handleClose}\r\n                open={open}\r\n            >\r\n                <SnackbarContent\r\n                    style={classes[type]}\r\n                    message={\r\n                        <span id=\"client-snackbar\" style={classes.message}>\r\n                            {variantIcon[type]}\r\n                            {message}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        )\r\n    }\r\n}\r\n","class EventBus {\r\n    constructor() {\r\n        this.events = this.events || {}\r\n    }\r\n}\r\n\r\nEventBus.prototype.emit = function (type, ...args) {\r\n    let e\r\n    e = this.events[type]\r\n    if (Array.isArray(e)) {\r\n        for (let i = 0; i < e.length; i++) {\r\n            e[i].apply(this, args)\r\n        }\r\n    } else {\r\n        e[0].apply(this, args)\r\n    }\r\n}\r\n\r\nEventBus.prototype.addListener = function (type, func) {\r\n    const e = this.events[type]\r\n\r\n    if (!e) {   //如果从未注册过监听函数，则将函数放入数组存入对应的键名下\r\n        this.events[type] = [func];\r\n    } else {  //如果注册过，则直接放入\r\n        e.push(func);\r\n    }\r\n}\r\n\r\nconst eventBus = new EventBus()\r\nexport default eventBus\r\n","import React from 'react'\r\nimport request from '../utils/request'\r\nimport Message from './Message'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport EventBus from '../utils/evebt-bus'\r\n\r\nexport default class SignIn extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        snackbar: {\r\n            open: false,\r\n            message: '',\r\n            type: '',\r\n        },\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            snackbar: {\r\n                open: false,\r\n                message: '',\r\n                type: '',\r\n            },\r\n        })\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleLogin = async () => {\r\n        const { username, password } = this.state\r\n        if (!username || !password) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: '请填写用户名和密码',\r\n                    type: 'warning',\r\n                },\r\n            })\r\n        }\r\n        try {\r\n            await request.postJSON('/login', {\r\n                username,\r\n                password,\r\n            })\r\n            this.setState(\r\n                {\r\n                    snackbar: {\r\n                        open: true,\r\n                        message: '登录成功',\r\n                        type: 'success',\r\n                    },\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.props.history.push('/')\r\n                        EventBus.emit('login')\r\n                    }, 1000)\r\n                },\r\n            )\r\n        } catch (e) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: e.msg,\r\n                    type: 'error',\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Message {...this.state.snackbar} onClose={this.handleClose} />\r\n                <div className=\"sign\">\r\n                    <TextField\r\n                        id=\"username\"\r\n                        label=\"用户名\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange('username')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"密码\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange('password')}\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleLogin}\r\n                    >\r\n                        登录\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport request from '../utils/request'\r\nimport Message from './Message'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport './sign.css'\r\n\r\nexport default class SignUp extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        snackbar: {\r\n            open: false,\r\n            message: '',\r\n            type: '',\r\n        },\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            snackbar: {\r\n                open: false,\r\n                message: '',\r\n                type: '',\r\n            },\r\n        })\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleSignUp = async () => {\r\n        const { username, password } = this.state\r\n        if (!username || !password) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: '请填写用户名和密码',\r\n                    type: 'warning',\r\n                },\r\n            })\r\n        }\r\n        try {\r\n            await request.postJSON('/signUp', {\r\n                username,\r\n                password,\r\n            })\r\n            this.setState(\r\n                {\r\n                    snackbar: {\r\n                        open: true,\r\n                        message: '注册成功',\r\n                        type: 'success',\r\n                    },\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.props.history.push('/signin')\r\n                    }, 1000)\r\n                },\r\n            )\r\n        } catch (e) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: e.msg,\r\n                    type: 'error',\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Message {...this.state.snackbar} onClose={this.handleClose} />\r\n                <div className=\"sign\">\r\n                    <TextField\r\n                        id=\"username\"\r\n                        label=\"用户名\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange('username')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"密码\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange('password')}\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleSignUp}\r\n                    >\r\n                        注册\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Skeleton () {\r\n    return (\r\n        <div className=\"skeleton\">\r\n            <div className=\"skeleton-content\"></div>\r\n            <div className=\"skeleton-content\"></div>\r\n            <div className=\"skeleton-content\"></div>\r\n            <div className=\"skeleton-content\"></div>\r\n            <div className=\"skeleton-content\"></div>\r\n            <div className=\"skeleton-content\"></div>\r\n        </div>\r\n    )\r\n} ","import React from 'react';\r\nimport produce from 'immer'\r\nimport _ from 'lodash/lang'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Message from './Message'\r\nimport request from '../utils/request'\r\n\r\nimport Skeleton from './Skeleton'\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid / 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n  boxSizing: 'border-box',\r\n  border: '2px solid',\r\n  borderRadius: '4px',\r\n  // change background colour if dragging\r\n  background: \"#fff\",\r\n  borderColor: isDragging ? \"#b3e5fc\" : \"#f6f6f6\",\r\n  boxShadow: isDragging ? '3px 3px 20px #4fc3f7' : 'none',\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  boxSizing: 'border-box',\r\n  background: isDraggingOver ? \"#e1f5fe\" : \"#fff\",\r\n  border: '1px solid #ddd',\r\n  padding: grid,\r\n  width: '100%',\r\n  maxWidth: '480px',\r\n  margin: '0 auto',\r\n});\r\n\r\nexport default class Drag extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      done: false,\r\n      btnSave: false,\r\n      snackbar: {\r\n        open: false,\r\n        message: '',\r\n        type: '',\r\n      },\r\n    };\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  handleChange = index => event => {\r\n    const newValue = event.target.value\r\n    this.setState(produce(draft => {\r\n      draft.items[index].content = newValue\r\n    }))\r\n  }\r\n\r\n  toggleEdit = index => (e) => {\r\n    if (e.target.tagName === 'TEXTAREA') return\r\n    this.setState(produce(draft => {\r\n      draft.items[index].editable = !draft.items[index].editable\r\n    }))\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      snackbar: {\r\n        open: false,\r\n        message: '',\r\n        type: '',\r\n      },\r\n    })\r\n  }\r\n\r\n  onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    if (_.isEqual(items, this.state.items)) return\r\n\r\n    this.setState({ items, btnSave: true });\r\n  }\r\n\r\n  handleToggle = (item, index) => () => {\r\n    this.setState(produce(draft => {\r\n      draft.items[index].done = !draft.items[index].done\r\n    }), async () => {\r\n      try {\r\n        await request.postJSON(`/update/${item.id}`, { done: this.state.items[index].done })\r\n      } catch (e) {\r\n        this.setState({\r\n          snackbar: {\r\n            open: true,\r\n            message: e.msg,\r\n            type: 'error',\r\n          },\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCreate = () => {\r\n    const newItem = {\r\n      id: (+new Date()).toString(),\r\n      content: '',\r\n      done: false,\r\n    }\r\n    this.setState(produce(draft => {\r\n      draft.items.unshift(newItem)\r\n    }), async () => {\r\n      try {\r\n        await request.postJSON(`/create`, newItem)\r\n      } catch (e) {\r\n        this.setState({\r\n          snackbar: {\r\n            open: true,\r\n            message: e.msg,\r\n            type: 'error',\r\n          },\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSave = async () => {\r\n    const postData = this.state.items.map(n => {\r\n      return { id: n.id, content: n.content, done: n.done }\r\n    })\r\n    try {\r\n      await request.postJSON('/updateNotes', {\r\n        notes: postData,\r\n      })\r\n      this.setState(\r\n        {\r\n          snackbar: {\r\n            open: true,\r\n            message: '保存成功',\r\n            type: 'success',\r\n          },\r\n          btnSave: false\r\n        },\r\n      )\r\n    } catch (e) {\r\n      this.setState({\r\n        snackbar: {\r\n          open: true,\r\n          message: e.msg,\r\n          type: 'error',\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDelete = item => async () => {\r\n    try {\r\n      await request.postJSON(`/delete/${item.id}`)\r\n      this.setState(produce(draft => {\r\n        draft.snackbar = {\r\n          open: true,\r\n          message: '删除成功',\r\n          type: 'success',\r\n        }\r\n        draft.items.splice(draft.items.findIndex(n => n.id === item.id), 1)\r\n      }))\r\n    } catch (e) {\r\n      this.setState({\r\n        snackbar: {\r\n          open: true,\r\n          message: e.msg,\r\n          type: 'error',\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const data = await request.get('/getNotes')\r\n      if (!data) {\r\n        return false // 数据为空\r\n      }\r\n      // console.log('Datas: ', data)\r\n      const formatData = data.map(n => {\r\n        return { id: n.id, content: n.content, done: n.done || false } // 老用户的notes中没有done属性\r\n      })\r\n      this.setState({ items: formatData, done: true })\r\n    }\r\n    catch (e) {\r\n      this.setState({\r\n        snackbar: {\r\n          open: true,\r\n          message: e.msg,\r\n          type: 'error',\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let content\r\n    let btnSave\r\n    if (this.state.items.length || this.state.done) {\r\n      content = this.state.items.map((item, index) => (\r\n        <Draggable key={item.id} draggableId={item.id} index={index}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              style={getItemStyle(\r\n                snapshot.isDragging,\r\n                provided.draggableProps.style\r\n              )}\r\n              >\r\n              {item.editable ?\r\n                <div onClick={this.toggleEdit(index)}>\r\n                  <TextField\r\n                    label=\"Note\"\r\n                    multiline\r\n                    rowsMax=\"5\"\r\n                    fullWidth\r\n                    className=\"input-multiline\"\r\n                    value={item.content} onChange={this.handleChange(index)}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <div className=\"input-multiline-btns\">\r\n                    <IconButton onClick={this.handleSave} variant=\"contained\" size=\"small\" color=\"secondary\"><SaveIcon /></IconButton>\r\n                    <IconButton onClick={this.handleDelete(item)} variant=\"contained\" size=\"small\"><DeleteIcon /></IconButton>\r\n                  </div>\r\n                </div> :\r\n                <div>\r\n                  <IconButton onClick={this.handleToggle(item, index)} variant=\"contained\" size=\"small\" color=\"secondary\" style={{float: 'left'}}><CheckIcon /></IconButton>\r\n                  <div className=\"text-multiline\" style={item.done ? { textDecoration: 'line-through', color: '#ccc' } : {}} onClick={this.toggleEdit(index)}><pre>{item.content ? item.content : <span style={{ color: '#ccc' }}>点击编辑</span>}</pre></div>\r\n                </div>\r\n              }\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      ))\r\n    } else {\r\n      content = <Skeleton />\r\n    }\r\n\r\n    if (this.state.btnSave) {\r\n      btnSave = <Fab color=\"secondary\" aria-label=\"Edit\" className=\"btn-feb btn-feb-save\" onClick={this.handleSave}>\r\n        <CheckIcon />\r\n      </Fab>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Message {...this.state.snackbar} onClose={this.handleClose} />\r\n        <Fab color=\"primary\" aria-label=\"Add\" className=\"btn-feb btn-feb-create\" onClick={this.handleCreate}>\r\n          <AddIcon />\r\n        </Fab>\r\n        {btnSave}\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId=\"droppable\">\r\n            {(provided, snapshot) => (\r\n              <div\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n              >\r\n                {content}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport request from '../utils/request'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { HashRouter as Router, Link, Route } from 'react-router-dom'\r\n\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport Drag from './Draggable'\r\n\r\nimport EventBus from '../utils/evebt-bus'\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n}\r\n\r\nclass ButtonAppBar extends React.Component {\r\n    state = {\r\n        isLoggedIn: false,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        EventBus.addListener('login', () => {\r\n            this.setState({ isLoggedIn: true })\r\n        })\r\n        try {\r\n            await request.get('/checkLogin')\r\n            this.setState({ isLoggedIn: true })\r\n        } catch (e) {\r\n            this.setState({ isLoggedIn: false })\r\n        }\r\n    }\r\n\r\n    logout = async () => {\r\n        try {\r\n            await request.postJSON('/logout', {})\r\n            this.setState({ isLoggedIn: false })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        let logEle\r\n        if (this.state.isLoggedIn) {\r\n            logEle = (\r\n                <div className=\"logout\" onClick={this.logout}>\r\n                    退出登录\r\n                </div>\r\n            )\r\n        } else {\r\n            logEle = (\r\n                <div className=\"link-wrapper\">\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/signin/\">SignIn</Link>\r\n                    <Link to=\"/signup/\">SignUp</Link>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className={classes.root}>\r\n                <Router>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} />\r\n                            {logEle}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Route path=\"/\" exact component={Drag} />\r\n                    <Route path=\"/signin/\" component={SignIn} />\r\n                    <Route path=\"/signup/\" component={SignUp} />\r\n                    <Route path=\"/drag/\" component={Drag} />\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ButtonAppBar)\r\n","import React from 'react'\r\nimport './App.css'\r\n\r\nimport Layout from './components/Layout'\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\nimport blue from '@material-ui/core/colors/blue'\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        primary: blue,\r\n        secondary: {\r\n            main: '#64dd17',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n})\r\n\r\nfunction App() {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <div className=\"App\">\r\n                <Layout />\r\n            </div>\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}