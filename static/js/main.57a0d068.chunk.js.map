{"version":3,"sources":["utils/request.js","components/Message.js","utils/evebt-bus.js","components/SignIn.js","components/SignUp.js","components/Grid.js","components/Draggable.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["isDev","process","checkStatus","response","status","error","Error","statusText","handleResponseData","data","ret","headers","arguments","length","undefined","code","_callee","url","body","options","toast","_args","regenerator_default","a","wrap","_context","prev","next","concat","fetch","Object","objectSpread","method","Content-Type","credentials","JSON","stringify","sent","json","abrupt","stop","_callee2","_context2","request","postJSON","get","classes","message","display","alignItems","success","backgroundColor","green","red","info","blue","warning","amber","variantIcon","react_default","createElement","CheckCircle_default","Warning_default","Error_default","Info_default","Message","handleClose","_this","props","onClose","_this$props","this","open","type","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent_default","style","id","action","IconButton_default","key","aria-label","color","onClick","Close_default","React","Component","EventBus","classCallCheck","events","prototype","emit","e","_len","args","Array","_key","isArray","i","apply","addListener","func","push","eventBus","SignIn","state","username","password","snackbar","setState","handleChange","name","event","defineProperty","target","value","handleLogin","_this$state","setTimeout","history","t0","msg","Message_Message","assign","className","TextField_default","label","onChange","margin","variant","autoComplete","Button_default","size","SignUp","handleSignUp","MyFirstGrid","layout","handleLayoutChange","console","log","el","_this2","add","data-grid","onAddItem","title","position","right","top","cursor","handleRemoveItem","filter","item","Date","toString","x","y","w","h","dataJSON","localStorage","setItem","notes","getItem","parse","_this3","react_grid_layout_default","cols","rowHeight","width","onLayoutChange","map","handleSave","handleAddItem","getItems","count","from","v","k","content","Drag","possibleConstructorReturn","getPrototypeOf","call","index","newValue","produce","draft","items","onDragEnd","bind","assertThisInitialized","result","destination","list","startIndex","endIndex","_result$splice","splice","removed","slicedToArray","reorder","source","react_beautiful_dnd_esm","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","boxSizing","background","border","padding","maxWidth","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","borderColor","placeholder","ButtonAppBar","isLoggedIn","logout","logEle","react_router_dom","to","root","AppBar_default","Toolbar_default","Typography_default","grow","react_router","path","exact","component","withStyles","flexGrow","menuButton","marginLeft","marginRight","theme","createMuiTheme","typography","useNextVariants","palette","primary","App","styles","Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8WACMA,GAAQC,EAEd,SAASC,EAAYC,GACjB,GAAIA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC5C,OAAOD,EAGX,IAAME,EAAQ,IAAIC,MAAMH,EAASI,YAEjC,MADAF,EAAMF,SAAWA,EACXE,EAGV,SAASG,EAAmBC,GAAoB,IACtCC,EAAM,CACRD,OACAE,QAAS,IAIb,MAP4CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,KAO/BF,EAAID,MAA0B,IAAlBC,EAAID,KAAKM,KAC9B,MAAML,EAAID,KAGd,OAAOC,EAAID,KAAKA,gDAepB,SAAAO,EAAwBC,EAAKC,GAA7B,IAAAC,EAAAC,EAAAjB,EAAAM,EAAAY,EAAAT,UAAA,OAAAU,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAmCR,EAAnCE,EAAAR,OAAA,QAAAC,IAAAO,EAAA,GAAAA,EAAA,GAA6C,GAAID,IAAjDC,EAAAR,OAAA,QAAAC,IAAAO,EAAA,KAAAA,EAAA,GACIJ,EAAMjB,EAAQiB,EAAH,4BAAAW,OAAqCX,GADpDQ,EAAAE,KAAA,EAE2BE,IAAMZ,EAADa,OAAAC,EAAA,EAAAD,CAAA,GACrBX,EADqB,CAExBa,OAAQ,OACRrB,QAAS,CACLsB,eAAgB,oBAEpBC,YAAa,UACbhB,KAAMiB,KAAKC,UAAUlB,MAT7B,cAYIhB,EAVMC,EAFVsB,EAAAY,MAAAZ,EAAAE,KAAA,EAcuBxB,EAASmC,OAdhC,cAcU7B,EAdVgB,EAAAY,KAAAZ,EAAAc,OAAA,SAgBW/B,EAAmBC,EAAMW,IAhBpC,yBAAAK,EAAAe,SAAAxB,wEAmBA,SAAAyB,EAAmBxB,GAAnB,IAAAd,EAAAM,EAAA,OAAAa,EAAAC,EAAAC,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cACIV,EAAMjB,EAAQiB,EAAH,4BAAAW,OAAqCX,GADpDyB,EAAAf,KAAA,EAG2BE,IAAMZ,EAAK,CAAEiB,YAAa,YAHrD,cAKIhC,EAFMC,EAHVuC,EAAAL,MAAAK,EAAAf,KAAA,EAOuBxB,EAASmC,OAPhC,cAOU7B,EAPViC,EAAAL,KAAAK,EAAAH,OAAA,SASW/B,EAAmBC,IAT9B,wBAAAiC,EAAAF,SAAAC,6BAYeE,MApCC,CACZC,uDACAC,iWCtBEC,GAAU,CACZC,QAAS,CACLC,QAAS,OACTC,WAAY,UAEhBC,QAAS,CACLC,gBAAiBC,IAAM,MAE3B/C,MAAO,CACH8C,gBAAiBE,KAAI,MAEzBC,KAAM,CACFH,gBAAiBI,KAAK,MAE1BC,QAAS,CACLL,gBAAiBM,IAAM,OAIzBC,GAAc,CAChBR,QAASS,EAAApC,EAAAqC,cAACC,EAAAtC,EAAD,MACTiC,QAASG,EAAApC,EAAAqC,cAACE,EAAAvC,EAAD,MACTlB,MAAOsD,EAAApC,EAAAqC,cAACG,EAAAxC,EAAD,MACP+B,KAAMK,EAAApC,EAAAqC,cAACI,EAAAzC,EAAD,OAGW0C,8MACjBC,YAAc,WACVC,EAAKC,MAAMC,mFAGN,IAAAC,EAC2BC,KAAKH,MAA7BI,EADHF,EACGE,KAAMzB,EADTuB,EACSvB,QAAS0B,EADlBH,EACkBG,KACvB,OACId,EAAApC,EAAAqC,cAACc,EAAAnD,EAAD,CACIoD,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,iBAAkB,IAClBT,QAASE,KAAKL,YACdM,KAAMA,GAENb,EAAApC,EAAAqC,cAACmB,EAAAxD,EAAD,CACIyD,MAAOlC,GAAQ2B,GACf1B,QACIY,EAAApC,EAAAqC,cAAA,QAAMqB,GAAG,kBAAkBD,MAAOlC,GAAQC,SACrCW,GAAYe,GACZ1B,GAGTmC,OAAQ,CACJvB,EAAApC,EAAAqC,cAACuB,EAAA5D,EAAD,CACI6D,IAAI,QACJC,aAAW,QACXC,MAAM,UACNC,QAAShB,KAAKL,aAEdP,EAAApC,EAAAqC,cAAC4B,EAAAjE,EAAD,kBA7BSkE,IAAMC,mDCxCrCC,GACF,SAAAA,IAAe7D,OAAA8D,EAAA,EAAA9D,CAAAyC,KAAAoB,GACXpB,KAAKsB,OAAStB,KAAKsB,QAAU,IAIrCF,GAASG,UAAUC,KAAO,SAAUtB,GAChC,IAAIuB,EACJA,EAAIzB,KAAKsB,OAAOpB,GAF+B,QAAAwB,EAAArF,UAAAC,OAANqF,EAAM,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAANF,EAAME,EAAA,GAAAxF,UAAAwF,GAG/C,GAAID,MAAME,QAAQL,GACd,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAEnF,OAAQyF,IAC1BN,EAAEM,GAAGC,MAAMhC,KAAM2B,QAGrBF,EAAE,GAAGO,MAAMhC,KAAM2B,IAIzBP,GAASG,UAAUU,YAAc,SAAU/B,EAAMgC,GAC7C,IAAMT,EAAIzB,KAAKsB,OAAOpB,GAEjBuB,EAGDA,EAAEU,KAAKD,GAFPlC,KAAKsB,OAAOpB,GAAQ,CAACgC,IAM7B,IACeE,GADE,IAAIhB,GCpBAiB,8MACjBC,MAAQ,CACJC,SAAU,GACVC,SAAU,GACVC,SAAU,CACNxC,MAAM,EACNzB,QAAS,GACT0B,KAAM,OAIdP,YAAc,WACVC,EAAK8C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAS,GACT0B,KAAM,SAKlByC,aAAe,SAAAC,GAAI,OAAI,SAAAC,GACnBjD,EAAK8C,SAALnF,OAAAuF,EAAA,EAAAvF,CAAA,GACKqF,EAAOC,EAAME,OAAOC,YAI7BC,iCAAc,SAAAxG,IAAA,IAAAyG,EAAAX,EAAAC,EAAA,OAAAzF,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAA8F,EACqBtD,EAAK0C,MAA5BC,EADEW,EACFX,SAAUC,EADRU,EACQV,SACbD,GAAaC,GACd5C,EAAK8C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAS,yDACT0B,KAAM,aAPRhD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYAgB,EAAQC,SAAS,SAAU,CAC7BkE,WACAC,aAdE,OAgBN5C,EAAK8C,SACD,CACID,SAAU,CACNxC,MAAM,EACNzB,QAAS,2BACT0B,KAAM,YAGd,WACIiD,WAAW,WACPvD,EAAKC,MAAMuD,QAAQjB,KAAK,KACxBf,GAASI,KAAK,UACf,OA5BLtE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmG,GAAAnG,EAAA,SAgCN0C,EAAK8C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAStB,EAAAmG,GAAEC,IACXpD,KAAM,WApCR,yBAAAhD,EAAAe,SAAAxB,EAAA,yFA2CV,OACI2C,EAAApC,EAAAqC,cAAA,WACID,EAAApC,EAAAqC,cAACkE,GAADhG,OAAAiG,OAAA,GAAaxD,KAAKsC,MAAMG,SAAxB,CAAkC3C,QAASE,KAAKL,eAChDP,EAAApC,EAAAqC,cAAA,OAAKoE,UAAU,QACXrE,EAAApC,EAAAqC,cAACqE,GAAA1G,EAAD,CACI0D,GAAG,WACHiD,MAAM,qBACNX,MAAOhD,KAAKsC,MAAMC,SAClBqB,SAAU5D,KAAK2C,aAAa,YAC5BkB,OAAO,SACPC,QAAQ,aAEZ1E,EAAApC,EAAAqC,cAACqE,GAAA1G,EAAD,CACI0D,GAAG,WACHiD,MAAM,eACNzD,KAAK,WACL8C,MAAOhD,KAAKsC,MAAME,SAClBoB,SAAU5D,KAAK2C,aAAa,YAC5BoB,aAAa,mBACbF,OAAO,SACPC,QAAQ,aAEZ1E,EAAApC,EAAAqC,cAAC2E,GAAAhH,EAAD,CACI8G,QAAQ,YACRG,KAAK,QACLlD,MAAM,UACNC,QAAShB,KAAKiD,aAJlB,yBA5FgB/B,IAAMC,WCArB+C,sNACjB5B,MAAQ,CACJC,SAAU,GACVC,SAAU,GACVC,SAAU,CACNxC,MAAM,EACNzB,QAAS,GACT0B,KAAM,OAIdP,YAAc,WACVC,EAAK8C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAS,GACT0B,KAAM,SAKlByC,aAAe,SAAAC,GAAI,OAAI,SAAAC,GACnBjD,EAAK8C,SAALnF,OAAAuF,EAAA,EAAAvF,CAAA,GACKqF,EAAOC,EAAME,OAAOC,YAI7BmB,kCAAe,SAAA1H,IAAA,IAAAyG,EAAAX,EAAAC,EAAA,OAAAzF,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAA8F,EACoBtD,EAAK0C,MAA5BC,EADGW,EACHX,SAAUC,EADPU,EACOV,SACbD,GAAaC,GACd5C,EAAK8C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAS,yDACT0B,KAAM,aAPPhD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYDgB,EAAQC,SAAS,UAAW,CAC9BkE,WACAC,aAdG,OAgBP5C,EAAK8C,SACD,CACID,SAAU,CACNxC,MAAM,EACNzB,QAAS,2BACT0B,KAAM,YAGd,WACIiD,WAAW,WACPvD,EAAKC,MAAMuD,QAAQjB,KAAK,YACzB,OA3BJjF,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmG,GAAAnG,EAAA,SA+BP0C,EAAK8C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAStB,EAAAmG,GAAEC,IACXpD,KAAM,WAnCP,yBAAAhD,EAAAe,SAAAxB,EAAA,yFA0CX,OACI2C,EAAApC,EAAAqC,cAAA,WACID,EAAApC,EAAAqC,cAACkE,GAADhG,OAAAiG,OAAA,GAAaxD,KAAKsC,MAAMG,SAAxB,CAAkC3C,QAASE,KAAKL,eAChDP,EAAApC,EAAAqC,cAAA,OAAKoE,UAAU,QACXrE,EAAApC,EAAAqC,cAACqE,GAAA1G,EAAD,CACI0D,GAAG,WACHiD,MAAM,qBACNX,MAAOhD,KAAKsC,MAAMC,SAClBqB,SAAU5D,KAAK2C,aAAa,YAC5BkB,OAAO,SACPC,QAAQ,aAEZ1E,EAAApC,EAAAqC,cAACqE,GAAA1G,EAAD,CACI0D,GAAG,WACHiD,MAAM,eACNzD,KAAK,WACL8C,MAAOhD,KAAKsC,MAAME,SAClBoB,SAAU5D,KAAK2C,aAAa,YAC5BoB,aAAa,mBACbF,OAAO,SACPC,QAAQ,aAEZ1E,EAAApC,EAAAqC,cAAC2E,GAAAhH,EAAD,CACI8G,QAAQ,YACRG,KAAK,QACLlD,MAAM,UACNC,QAAShB,KAAKmE,cAJlB,yBA3FgBjD,IAAMC,iCCFrBiD,sNACjB9B,MAAQ,CACJ+B,OAAQ,GACRnI,KAAM,GACNuG,SAAU,CACNxC,MAAM,EACNzB,QAAS,GACT0B,KAAM,OAoCdP,YAAc,WACVC,EAAK8C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAS,GACT0B,KAAM,SAKlBoE,mBAAqB,SAAAD,GACjBE,QAAQC,IAAIH,GACZzE,EAAK8C,SAAS,CAAE2B,yFA5CNI,GAAI,IAAAC,EAAA1E,KAOR+B,EAAI0C,EAAGE,IAAM,IAAMF,EAAG1C,EAC5B,OACI3C,EAAApC,EAAAqC,cAAA,OAAKwB,IAAKkB,EAAG6C,YAAWH,GACnBA,EAAGE,IACAvF,EAAApC,EAAAqC,cAAA,QACIoE,UAAU,WACVzC,QAAShB,KAAK6E,UACdC,MAAM,8CAHV,SAQI1F,EAAApC,EAAAqC,cAAA,QAAMoE,UAAU,QAAQ1B,GAEhC3C,EAAApC,EAAAqC,cAAA,QACIoE,UAAU,SACVhD,MAtBQ,CAChBsE,SAAU,WACVC,MAAO,MACPC,IAAK,EACLC,OAAQ,WAmBAlE,QAAS,kBAAM0D,EAAKS,iBAAiBpD,KAHzC,+CA0BKA,GACbwC,QAAQC,IAAIzC,GACZ/B,KAAK0C,SAAS,CACV2B,OAAQrE,KAAKsC,MAAM+B,OAAOe,OAAO,SAAAC,GAAI,OAAIA,EAAKtD,IAAMA,8CAKxD/B,KAAK0C,SAAS,CACV2B,OAAQrE,KAAKsC,MAAM+B,OAAOhH,OAAO,CAC7B0E,IAAM,IAAIuD,MAAQC,WAClBC,EAA+B,EAA3BxF,KAAKsC,MAAM+B,OAAO/H,OAAc,GACpCmJ,EAAG,EACHC,EAAG,EACHC,EAAG,gKAMLC,EAAWhI,KAAKC,UAAUmC,KAAKsC,MAAM+B,QAC3CwB,aAAaC,QAAQ,YAAaF,qBAExBxH,EAAQC,SAAS,eAAgB,CACnC0H,MAAOH,WAEX5F,KAAK0C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAS,qBACT0B,KAAM,6DAIdF,KAAK0C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAAStB,EAAAmG,GAAEC,IACXpD,KAAM,uRAOd2F,aAAaG,QAAQ,cACrBhG,KAAK0C,SAAS,CACV2B,OAAQzG,KAAKqI,MAAMJ,aAAaG,QAAQ,kCAIvB5H,EAAQE,IAAI,uBAA3B+F,mDAEK,UAEXrE,KAAK0C,SAAS,CAAE2B,OAAQzG,KAAKqI,MAAM5B,uDAGnCrE,KAAK0C,SAAS,CACVD,SAAU,CACNxC,MAAM,EACNzB,QAASL,EAAAkF,GAAEC,IACXpD,KAAM,wJAMb,IAAAgG,EAAAlG,KAEGqE,EAAWrE,KAAKsC,MAAhB+B,OACR,OACIjF,EAAApC,EAAAqC,cAAA,WACID,EAAApC,EAAAqC,cAACkE,GAADhG,OAAAiG,OAAA,GAAaxD,KAAKsC,MAAMG,SAAxB,CAAkC3C,QAASE,KAAKL,eAChDP,EAAApC,EAAAqC,cAAC8G,GAAAnJ,EAAD,CACIyG,UAAU,SACVY,OAAQA,EACR+B,KAAM,GACNC,UAAW,GACXC,MAAO,KACPC,eAAgBvG,KAAKsE,oBAEpBtE,KAAKsC,MAAM+B,OAAOmC,IAAI,SAAA/B,GAAE,OAAIyB,EAAK7G,cAAcoF,MAEpDrF,EAAApC,EAAAqC,cAAA,UAAQ2B,QAAS,kBAAMkF,EAAKO,eAA5B,QACArH,EAAApC,EAAAqC,cAAA,UAAQ2B,QAAS,kBAAMkF,EAAKQ,kBAA5B,qBA/IyBxF,IAAMC,kDCDzCwF,GAAW,SAAAC,GAAK,OACpBhF,MAAMiF,KAAK,CAAEvK,OAAQsK,GAAS,SAACE,EAAGC,GAAJ,OAAUA,IAAGP,IAAI,SAAAO,GAAC,MAAK,CACnDrG,GAAE,QAAArD,OAAU0J,GACZC,QAAO,QAAA3J,OAAU0J,OAuCAE,eACnB,SAAAA,EAAYpH,GAAO,IAAAD,EAAA,OAAArC,OAAA8D,EAAA,EAAA9D,CAAAyC,KAAAiH,IACjBrH,EAAArC,OAAA2J,EAAA,EAAA3J,CAAAyC,KAAAzC,OAAA4J,EAAA,EAAA5J,CAAA0J,GAAAG,KAAApH,KAAMH,KAOR8C,aAAe,SAAA0E,GAAK,OAAI,SAAAxE,GACtB,IAAMyE,EAAWzE,EAAME,OAAOC,MAC9BpD,EAAK8C,SAAS6E,aAAQ,SAAAC,GACpBA,EAAMC,MAAMJ,GAAOL,QAAUM,OAT/B1H,EAAK0C,MAAQ,CACXmF,MAAOd,GAAS,KAElB/G,EAAK8H,UAAY9H,EAAK8H,UAAUC,KAAfpK,OAAAqK,GAAA,EAAArK,CAAAqC,IALAA,yEAeTiI,GAER,GAAKA,EAAOC,YAAZ,CAIA,IAAML,EAzDM,SAACM,EAAMC,EAAYC,GACjC,IAAMJ,EAASjG,MAAMiF,KAAKkB,GADoBG,EAE5BL,EAAOM,OAAOH,EAAY,GAArCI,EAFuC7K,OAAA8K,GAAA,EAAA9K,CAAA2K,EAAA,MAK9C,OAFAL,EAAOM,OAAOF,EAAU,EAAGG,GAEpBP,EAoDSS,CACZtI,KAAKsC,MAAMmF,MACXI,EAAOU,OAAOlB,MACdQ,EAAOC,YAAYT,OAGrBrH,KAAK0C,SAAS,CACZ+E,4CAMK,IAAA/C,EAAA1E,KACP,OACEZ,EAAApC,EAAAqC,cAACmJ,GAAA,EAAD,CAAiBd,UAAW1H,KAAK0H,WAC/BtI,EAAApC,EAAAqC,cAACmJ,GAAA,EAAD,CAAWC,YAAY,aACpB,SAACC,EAAUC,GAAX,OACCvJ,EAAApC,EAAAqC,cAAA,MAAA9B,OAAAiG,OAAA,GACMkF,EAASE,eADf,CAEEC,IAAKH,EAASI,SACdrI,OArDOsI,EAqDaJ,EAASI,eArDH,CACtCC,UAAW,aACXC,WAAYF,EAAiB,YAAc,OAC3CG,OAAQ,iBACRC,QArBW,EAsBX7C,MAAO,OACP8C,SAAU,QACVvF,OAAQ,aAgDKa,EAAKpC,MAAMmF,MAAMjB,IAAI,SAACnB,EAAMgC,GAAP,OACpBjI,EAAApC,EAAAqC,cAACmJ,GAAA,EAAD,CAAW3H,IAAKwE,EAAK3E,GAAI2I,YAAahE,EAAK3E,GAAI2G,MAAOA,GACnD,SAACqB,EAAUC,GAAX,OACCvJ,EAAApC,EAAAqC,cAAA,MAAA9B,OAAAiG,OAAA,CACEqF,IAAKH,EAASI,UACVJ,EAASY,eACTZ,EAASa,gBAHf,CAIE9I,OA7EA+I,EA8EEb,EAASa,WA9ECC,EA+EVf,EAASY,eAAe7I,MA/E3BlD,OAAAC,EAAA,EAAAD,CAAA,CAEnBmM,WAAY,OACZP,QAASQ,GACT9F,OAAM,OAAAxG,OANK,EAML,QAGN4L,WAAY,OACZC,OAAQ,YACRU,YAAaJ,EAAa,YAAc,eAGrCC,MAsEiBrK,EAAApC,EAAAqC,cAACqE,GAAA1G,EAAD,CAAWkD,KAAK,OAAO8C,MAAOqC,EAAK2B,QAASpD,SAAUc,EAAK/B,aAAa0E,MAlFzE,IAACmC,EAAYC,MAuFnBf,EAASmB,aAxEH,IAAAd,YAUa7H,IAAMC,WCflC2I,8MACFxH,MAAQ,CACJyH,YAAY,KAehBC,4BAAS,SAAAvN,IAAA,OAAAM,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKgB,EAAQC,SAAS,UAAW,IAFjC,OAGDuB,EAAK8C,SAAS,CAAEqH,YAAY,IAH3B7M,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAmG,GAAAnG,EAAA,SAKDqH,QAAQC,IAARtH,EAAAmG,IALC,wBAAAnG,EAAAe,SAAAxB,EAAA,8NAXL2E,GAASa,YAAY,QAAS,WAC1ByC,EAAKhC,SAAS,CAAEqH,YAAY,wBAGtB3L,EAAQE,IAAI,sBAClB0B,KAAK0C,SAAS,CAAEqH,YAAY,oDAE5B/J,KAAK0C,SAAS,CAAEqH,YAAY,gJAa3B,IAEDE,EADI1L,EAAYyB,KAAKH,MAAjBtB,QAkBR,OAfI0L,EADAjK,KAAKsC,MAAMyH,WAEP3K,EAAApC,EAAAqC,cAAA,OAAKoE,UAAU,SAASzC,QAAShB,KAAKgK,QAAtC,4BAMA5K,EAAApC,EAAAqC,cAAA,OAAKoE,UAAU,gBACXrE,EAAApC,EAAAqC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,KAAT,QACA/K,EAAApC,EAAAqC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,YAAT,UACA/K,EAAApC,EAAAqC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,YAAT,UACA/K,EAAApC,EAAAqC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,UAAT,SAKR/K,EAAApC,EAAAqC,cAAA,OAAKoE,UAAWlF,EAAQ6L,MACpBhL,EAAApC,EAAAqC,cAAC6K,EAAA,EAAD,KACI9K,EAAApC,EAAAqC,cAACgL,EAAArN,EAAD,CAAQ+H,SAAS,UACb3F,EAAApC,EAAAqC,cAACiL,EAAAtN,EAAD,KACIoC,EAAApC,EAAAqC,cAACkL,EAAAvN,EAAD,CAAY8G,QAAQ,KAAK/C,MAAM,UAAU0C,UAAWlF,EAAQiM,OAC3DP,IAGT7K,EAAApC,EAAAqC,cAACoL,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWxG,KACjChF,EAAApC,EAAAqC,cAACoL,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAWvI,KAClCjD,EAAApC,EAAAqC,cAACoL,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAW1G,KAClC9E,EAAApC,EAAAqC,cAACoL,EAAA,EAAD,CAAOC,KAAK,SAASE,UAAW3D,cAzDzB/F,IAAMC,WAoElB0J,wBAjFA,CACXT,KAAM,CACFU,SAAU,GAEdN,KAAM,CACFM,SAAU,GAEdC,WAAY,CACRC,YAAa,GACbC,YAAa,KAwENJ,CAAmBf,IC5F5BoB,GAAQC,yBAAe,CACzBC,WAAY,CACRC,iBAAiB,GAErBC,QAAS,CACLC,QAASvM,QAcFwM,OAVf,WACI,OACIpM,EAAApC,EAAAqC,cAACoM,EAAA,iBAAD,CAAkBP,MAAOA,IACrB9L,EAAApC,EAAAqC,cAAA,OAAKoE,UAAU,OACXrE,EAAApC,EAAAqC,cAACqM,GAAD,SCTIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7M,EAAApC,EAAAqC,cAAC6M,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.57a0d068.chunk.js","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nconst isDev = process.env.NODE_ENV === 'development'\r\n\r\nfunction checkStatus(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response\r\n    }\r\n\r\n    const error = new Error(response.statusText)\r\n    error.response = response\r\n    throw error\r\n}\r\n\r\nfunction handleResponseData(data, toast = true) {\r\n    const ret = {\r\n        data,\r\n        headers: {},\r\n    }\r\n\r\n    // 如果错误码 !== 0 默认弹出 toast\r\n    if (toast && ret.data && ret.data.code !== 0) {\r\n        throw ret.data\r\n    }\r\n\r\n    return ret.data.data\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nconst request = {\r\n    postJSON,\r\n    get,\r\n}\r\n\r\nasync function postJSON(url, body, options = {}, toast = true) {\r\n    url = isDev ? url : `http://118.24.146.34:8770${url}`\r\n    const response = await fetch(url, {\r\n        ...options,\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(body),\r\n    })\r\n\r\n    checkStatus(response)\r\n\r\n    const data = await response.json()\r\n\r\n    return handleResponseData(data, toast)\r\n}\r\n\r\nasync function get(url) {\r\n    url = isDev ? url : `http://118.24.146.34:8770${url}`\r\n\r\n    const response = await fetch(url, { credentials: 'include' })\r\n\r\n    checkStatus(response)\r\n\r\n    const data = await response.json()\r\n\r\n    return handleResponseData(data)\r\n}\r\n\r\nexport default request\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport green from '@material-ui/core/colors/green'\r\nimport amber from '@material-ui/core/colors/amber'\r\nimport red from '@material-ui/core/colors/red'\r\nimport blue from '@material-ui/core/colors/blue'\r\n\r\nconst classes = {\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: red[500],\r\n    },\r\n    info: {\r\n        backgroundColor: blue[900],\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n}\r\n\r\nconst variantIcon = {\r\n    success: <CheckCircleIcon />,\r\n    warning: <WarningIcon />,\r\n    error: <ErrorIcon />,\r\n    info: <InfoIcon />,\r\n}\r\n\r\nexport default class Message extends React.Component {\r\n    handleClose = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    render() {\r\n        const { open, message, type } = this.props\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                autoHideDuration={3000}\r\n                onClose={this.handleClose}\r\n                open={open}\r\n            >\r\n                <SnackbarContent\r\n                    style={classes[type]}\r\n                    message={\r\n                        <span id=\"client-snackbar\" style={classes.message}>\r\n                            {variantIcon[type]}\r\n                            {message}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            onClick={this.handleClose}\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar>\r\n        )\r\n    }\r\n}\r\n","class EventBus {\r\n    constructor() {\r\n        this.events = this.events || {}\r\n    }\r\n}\r\n\r\nEventBus.prototype.emit = function (type, ...args) {\r\n    let e\r\n    e = this.events[type]\r\n    if (Array.isArray(e)) {\r\n        for (let i = 0; i < e.length; i++) {\r\n            e[i].apply(this, args)\r\n        }\r\n    } else {\r\n        e[0].apply(this, args)\r\n    }\r\n}\r\n\r\nEventBus.prototype.addListener = function (type, func) {\r\n    const e = this.events[type]\r\n\r\n    if (!e) {   //如果从未注册过监听函数，则将函数放入数组存入对应的键名下\r\n        this.events[type] = [func];\r\n    } else {  //如果注册过，则直接放入\r\n        e.push(func);\r\n    }\r\n}\r\n\r\nconst eventBus = new EventBus()\r\nexport default eventBus\r\n","import React from 'react'\r\nimport request from '../utils/request'\r\nimport Message from './Message'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport EventBus from '../utils/evebt-bus'\r\n\r\nexport default class SignIn extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        snackbar: {\r\n            open: false,\r\n            message: '',\r\n            type: '',\r\n        },\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            snackbar: {\r\n                open: false,\r\n                message: '',\r\n                type: '',\r\n            },\r\n        })\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleLogin = async () => {\r\n        const { username, password } = this.state\r\n        if (!username || !password) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: '请填写用户名和密码',\r\n                    type: 'warning',\r\n                },\r\n            })\r\n        }\r\n        try {\r\n            await request.postJSON('/login', {\r\n                username,\r\n                password,\r\n            })\r\n            this.setState(\r\n                {\r\n                    snackbar: {\r\n                        open: true,\r\n                        message: '登录成功',\r\n                        type: 'success',\r\n                    },\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.props.history.push('/')\r\n                        EventBus.emit('login')\r\n                    }, 1000)\r\n                },\r\n            )\r\n        } catch (e) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: e.msg,\r\n                    type: 'error',\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Message {...this.state.snackbar} onClose={this.handleClose} />\r\n                <div className=\"sign\">\r\n                    <TextField\r\n                        id=\"username\"\r\n                        label=\"用户名\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange('username')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"密码\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange('password')}\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleLogin}\r\n                    >\r\n                        登录\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport request from '../utils/request'\r\nimport Message from './Message'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport './sign.css'\r\n\r\nexport default class SignUp extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        snackbar: {\r\n            open: false,\r\n            message: '',\r\n            type: '',\r\n        },\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            snackbar: {\r\n                open: false,\r\n                message: '',\r\n                type: '',\r\n            },\r\n        })\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    handleSignUp = async () => {\r\n        const { username, password } = this.state\r\n        if (!username || !password) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: '请填写用户名和密码',\r\n                    type: 'warning',\r\n                },\r\n            })\r\n        }\r\n        try {\r\n            await request.postJSON('/signUp', {\r\n                username,\r\n                password,\r\n            })\r\n            this.setState(\r\n                {\r\n                    snackbar: {\r\n                        open: true,\r\n                        message: '注册成功',\r\n                        type: 'success',\r\n                    },\r\n                },\r\n                () => {\r\n                    setTimeout(() => {\r\n                        this.props.history.push('/signin')\r\n                    }, 1000)\r\n                },\r\n            )\r\n        } catch (e) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: e.msg,\r\n                    type: 'error',\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Message {...this.state.snackbar} onClose={this.handleClose} />\r\n                <div className=\"sign\">\r\n                    <TextField\r\n                        id=\"username\"\r\n                        label=\"用户名\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange('username')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"密码\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange('password')}\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleSignUp}\r\n                    >\r\n                        注册\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport GridLayout from 'react-grid-layout'\r\nimport request from '../utils/request'\r\nimport Message from './Message'\r\nimport './grid.css'\r\n\r\nexport default class MyFirstGrid extends React.Component {\r\n    state = {\r\n        layout: [],\r\n        data: [],\r\n        snackbar: {\r\n            open: false,\r\n            message: '',\r\n            type: '',\r\n        },\r\n    }\r\n\r\n    createElement(el) {\r\n        const removeStyle = {\r\n            position: \"absolute\",\r\n            right: \"2px\",\r\n            top: 0,\r\n            cursor: \"pointer\",\r\n        };\r\n        const i = el.add ? \"+\" : el.i;\r\n        return (\r\n            <div key={i} data-grid={el}>\r\n                {el.add ? (\r\n                    <span\r\n                        className=\"add text\"\r\n                        onClick={this.onAddItem}\r\n                        title=\"You can add an item by clicking here, too.\"\r\n                    >\r\n                        Add +\r\n              </span>\r\n                ) : (\r\n                        <span className=\"text\">{i}</span>\r\n                    )}\r\n                <span\r\n                    className=\"remove\"\r\n                    style={removeStyle}\r\n                    onClick={() => this.handleRemoveItem(i)}\r\n                >\r\n                    x\r\n            </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            snackbar: {\r\n                open: false,\r\n                message: '',\r\n                type: '',\r\n            },\r\n        })\r\n    }\r\n\r\n    handleLayoutChange = layout => {\r\n        console.log(layout)\r\n        this.setState({ layout })\r\n    }\r\n\r\n    handleRemoveItem(i) {\r\n        console.log(i)\r\n        this.setState({\r\n            layout: this.state.layout.filter(item => item.i !== i)\r\n        })\r\n    }\r\n\r\n    handleAddItem() {\r\n        this.setState({\r\n            layout: this.state.layout.concat({\r\n                i: (+ new Date()).toString(),\r\n                x: (this.state.layout.length * 2) % 12,\r\n                y: 0, // puts it at the bottom\r\n                w: 2,\r\n                h: 2\r\n            }),\r\n        });\r\n    }\r\n\r\n    async handleSave() {\r\n        const dataJSON = JSON.stringify(this.state.layout)\r\n        localStorage.setItem('NOTE_DATA', dataJSON)\r\n        try {\r\n            await request.postJSON('/updateNotes', {\r\n                notes: dataJSON\r\n            })\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: 'Save successfully!',\r\n                    type: 'success',\r\n                },\r\n            })\r\n        } catch (e) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: e.msg,\r\n                    type: 'error',\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (localStorage.getItem('NOTE_DATA')) {\r\n            this.setState({\r\n                layout: JSON.parse(localStorage.getItem('NOTE_DATA')),\r\n            })\r\n        }\r\n        try {\r\n            const layout = await request.get('/getNotes')\r\n            if (!layout) {\r\n                return false // 数据为空\r\n            }\r\n            this.setState({ layout: JSON.parse(layout) })\r\n        }\r\n        catch (e) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: e.msg,\r\n                    type: 'error',\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // layout is an array of objects, see the demo for more complete usage\r\n        const { layout } = this.state\r\n        return (\r\n            <div>\r\n                <Message {...this.state.snackbar} onClose={this.handleClose} />\r\n                <GridLayout\r\n                    className=\"layout\"\r\n                    layout={layout}\r\n                    cols={12}\r\n                    rowHeight={30}\r\n                    width={1080}\r\n                    onLayoutChange={this.handleLayoutChange}\r\n                >\r\n                    {this.state.layout.map(el => this.createElement(el))}\r\n                </GridLayout>\r\n                <button onClick={() => this.handleSave()}>Save</button>\r\n                <button onClick={() => this.handleAddItem()}> Add Item</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport produce from 'immer'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst getItems = count =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    id: `item-${k}`,\r\n    content: `item ${k}`\r\n  }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: \"#fff\",\r\n  border: '2px solid',\r\n  borderColor: isDragging ? \"lightblue\" : \"transparent\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  boxSizing: 'border-box',\r\n  background: isDraggingOver ? \"lightpink\" : \"#eee\",\r\n  border: '1px solid #ccc',\r\n  padding: grid,\r\n  width: '100%',\r\n  maxWidth: '480px',\r\n  margin: '0 auto',\r\n});\r\n\r\nexport default class Drag extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: getItems(10)\r\n    };\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  handleChange = index => event => {\r\n    const newValue = event.target.value\r\n    this.setState(produce(draft => {\r\n      draft.items[index].content = newValue\r\n    }))\r\n  }\r\n\r\n  onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      items\r\n    });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      <TextField type=\"text\" value={item.content} onChange={this.handleChange(index)} />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport request from '../utils/request'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport { HashRouter as Router, Link, Route } from 'react-router-dom'\r\n\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport MyFirstGrid from './Grid'\r\nimport Drag from './Draggable'\r\n\r\nimport EventBus from '../utils/evebt-bus'\r\n\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n}\r\n\r\nclass ButtonAppBar extends React.Component {\r\n    state = {\r\n        isLoggedIn: false,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        EventBus.addListener('login', () => {\r\n            this.setState({ isLoggedIn: true })\r\n        })\r\n        try {\r\n            await request.get('/checkLogin')\r\n            this.setState({ isLoggedIn: true })\r\n        } catch (e) {\r\n            this.setState({ isLoggedIn: false })\r\n        }\r\n    }\r\n\r\n    logout = async () => {\r\n        try {\r\n            await request.postJSON('/logout', {})\r\n            this.setState({ isLoggedIn: false })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        let logEle\r\n        if (this.state.isLoggedIn) {\r\n            logEle = (\r\n                <div className=\"logout\" onClick={this.logout}>\r\n                    退出登录\r\n                </div>\r\n            )\r\n        } else {\r\n            logEle = (\r\n                <div className=\"link-wrapper\">\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/signin/\">SignIn</Link>\r\n                    <Link to=\"/signup/\">SignUp</Link>\r\n                    <Link to=\"/drag/\">Drag</Link>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className={classes.root}>\r\n                <Router>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow} />\r\n                            {logEle}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Route path=\"/\" exact component={MyFirstGrid} />\r\n                    <Route path=\"/signin/\" component={SignIn} />\r\n                    <Route path=\"/signup/\" component={SignUp} />\r\n                    <Route path=\"/drag/\" component={Drag} />\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ButtonAppBar)\r\n","import React from 'react'\r\nimport './App.css'\r\n\r\nimport Layout from './components/Layout'\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\nimport blue from '@material-ui/core/colors/blue'\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        primary: blue,\r\n    },\r\n})\r\n\r\nfunction App() {\r\n    return (\r\n        <MuiThemeProvider theme={theme}>\r\n            <div className=\"App\">\r\n                <Layout />\r\n            </div>\r\n        </MuiThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}