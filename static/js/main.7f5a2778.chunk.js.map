{"version":3,"sources":["utils/request.js","components/Message.js","components/SignIn.js","components/SignUp.js","components/Grid.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["isDev","process","checkStatus","response","status","error","Error","statusText","handleResponseData","data","ret","headers","arguments","length","undefined","code","_callee","url","body","options","toast","_args","regenerator_default","a","wrap","_context","prev","next","concat","fetch","Object","objectSpread","method","Content-Type","JSON","stringify","sent","json","stop","_callee2","_context2","request","postJSON","get","classes","message","display","alignItems","success","backgroundColor","green","red","info","blue","warning","amber","variantIcon","react_default","createElement","CheckCircle_default","Warning_default","Error_default","Info_default","Message","handleClose","_this","props","onClose","_this$props","this","open","type","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent_default","style","id","action","IconButton_default","key","aria-label","color","onClick","Close_default","React","Component","SignIn","state","username","password","snackbar","setState","handleChange","name","event","defineProperty","target","value","handleLogin","_this$state","setTimeout","history","push","window","location","reload","t0","msg","Message_Message","assign","className","TextField_default","label","onChange","margin","variant","autoComplete","Button_default","size","SignUp","handleSignUp","MyFirstGrid","layout","i","x","y","w","h","changeStop","console","log","react_grid_layout_default","cols","rowHeight","width","onDragStop","onResizeStop","ButtonAppBar","isLoggedIn","logout","logEle","react_router_dom","to","root","AppBar_default","position","Toolbar_default","Typography_default","grow","react_router","path","exact","component","withStyles","flexGrow","menuButton","marginLeft","marginRight","theme","createMuiTheme","typography","useNextVariants","palette","primary","App","styles","Layout","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f5a2778.chunk.js","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nconst isDev = process.env.NODE_ENV === 'development'\r\n\r\nfunction checkStatus(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response\r\n    }\r\n\r\n    const error = new Error(response.statusText)\r\n    error.response = response\r\n    throw error\r\n}\r\n\r\nfunction handleResponseData(data, toast=true) {\r\n    const ret = {\r\n        data,\r\n        headers: {},\r\n    }\r\n\r\n    // 如果错误码 !== 0 默认弹出 toast\r\n    if (toast && ret.data && ret.data.code !== 0) {\r\n        // message.error(ret.data.msg)\r\n        throw ret.data\r\n    }\r\n    return ret.data\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\nconst request = {\r\n    postJSON,\r\n    get\r\n}\r\n\r\nasync function postJSON (url,body,options={},toast=true) {\r\n    url = isDev ? url : `http://118.24.146.34:8770${url}`\r\n    const response = await fetch(url, {\r\n        ...options,\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n    })\r\n\r\n    checkStatus(response)\r\n\r\n    const data = await response.json()\r\n\r\n    handleResponseData(data, toast)\r\n}\r\n\r\nasync function get(url) {\r\n    url = isDev ? url : `http://118.24.146.34:8770${url}`\r\n    \r\n    const response = await fetch(url)\r\n\r\n    checkStatus(response)\r\n\r\n    const data = await response.json()\r\n\r\n    handleResponseData(data)\r\n}\r\n\r\nexport default request\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport red from '@material-ui/core/colors/red';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nconst classes = {\r\n    message:  {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: red[500],\r\n    },\r\n    info: {\r\n        backgroundColor: blue[900],\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n}\r\n\r\nconst variantIcon = {\r\n    success: <CheckCircleIcon />,\r\n    warning: <WarningIcon />,\r\n    error: <ErrorIcon />,\r\n    info: <InfoIcon />,\r\n  };\r\n\r\nexport default class Message extends React.Component {\r\n    handleClose = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    render() {\r\n        const {open ,message, type} = this.props\r\n        return (\r\n            <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center'}}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleClose}\r\n            open={open}\r\n            >\r\n                <SnackbarContent\r\n                    style={classes[type]}\r\n                    message={\r\n                        <span id=\"client-snackbar\" style={classes.message}>\r\n                        {variantIcon[type]}\r\n                        {message}\r\n                        </span>\r\n                    }\r\n                    action={[\r\n                        <IconButton\r\n                          key=\"close\"\r\n                          aria-label=\"Close\"\r\n                          color=\"inherit\"\r\n                          onClick={this.handleClose}\r\n                        >\r\n                          <CloseIcon />\r\n                        </IconButton>,\r\n                    ]}\r\n                />\r\n            </Snackbar> \r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport request from '../utils/request'\r\nimport Message from './Message'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class SignIn extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        snackbar: {\r\n            open: false,\r\n            message: '',\r\n            type: '',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            snackbar: {\r\n                open: false,\r\n                message: '',\r\n                type: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    handleLogin = async () => {\r\n        const {username, password} = this.state\r\n        if(!username || !password) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: '请填写用户名和密码',\r\n                    type: 'warning'\r\n                }\r\n            })\r\n        }\r\n        try {\r\n            await request.postJSON('/login', {\r\n                username,\r\n                password\r\n            })\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: '登录成功',\r\n                    type: 'success'\r\n                }\r\n            },() => {\r\n                setTimeout(() => {\r\n                    this.props.history.push('/');\r\n                    window.location.reload() \r\n                }, 1000)\r\n            })\r\n        } catch(e) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: e.msg,\r\n                    type: 'error'\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Message {...this.state.snackbar} onClose={this.handleClose} />\r\n                <div className=\"sign\"> \r\n                    <TextField\r\n                        id=\"username\"\r\n                        label=\"用户名\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange('username')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"密码\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange('password')}\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.handleLogin}>登录</Button>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n} ","import React from 'react'\r\nimport request from '../utils/request'\r\nimport Message from './Message'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './sign.css'\r\n\r\nexport default class SignUp extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        snackbar: {\r\n            open: false,\r\n            message: '',\r\n            type: '',\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            snackbar: {\r\n                open: false,\r\n                message: '',\r\n                type: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleSignUp = async () => {\r\n        const {username, password} = this.state\r\n        if(!username || !password) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: '请填写用户名和密码',\r\n                    type: 'warning'\r\n                }\r\n            })\r\n        }\r\n        try {\r\n            await request.postJSON('/signUp', {\r\n                username,\r\n                password\r\n            })\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: '注册成功',\r\n                    type: 'success'\r\n                }\r\n            },() => {\r\n                setTimeout(()=> {\r\n                    this.props.history.push('/signin');\r\n                }, 1000)\r\n            })\r\n        } catch(e) {\r\n            this.setState({\r\n                snackbar: {\r\n                    open: true,\r\n                    message: e.msg,\r\n                    type: 'error'\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Message {...this.state.snackbar} onClose={this.handleClose} />\r\n                <div className=\"sign\"> \r\n                    <TextField\r\n                        id=\"username\"\r\n                        label=\"用户名\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleChange('username')}\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"密码\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange('password')}\r\n                        autoComplete=\"current-password\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.handleSignUp}>注册</Button>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n} ","import React from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\nimport './grid.css';\r\n\r\nexport default class MyFirstGrid extends React.Component {\r\n    state = {\r\n        layout :[\r\n            { i: 'a', x: 0, y: 0, w: 1, h: 2},\r\n            { i: 'b', x: 1, y: 0, w: 3, h: 2 },\r\n            { i: 'c', x: 4, y: 0, w: 1, h: 2 }\r\n        ]\r\n    }\r\n\r\n    changeStop = () => {\r\n        console.log(this.state.layout)\r\n    }\r\n\r\n    render() {\r\n        // layout is an array of objects, see the demo for more complete usage\r\n        const {layout} = this.state\r\n        return (\r\n            <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={30} width={1080} onDragStop={this.changeStop} onResizeStop={this.changeStop}>\r\n                <div key=\"a\">a</div>\r\n                <div key=\"b\">b</div>\r\n                <div key=\"c\">c</div>\r\n            </GridLayout>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport request from '../utils/request'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { BrowserRouter as Router, Link, Route, } from \"react-router-dom\";\r\n\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport MyFirstGrid from './Grid'\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass ButtonAppBar extends React.Component {\r\n  state = {\r\n    isLoggedIn: false\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      await request.get('/checkLogin')\r\n      this.setState({ isLoggedIn: true })\r\n    } catch(e) {\r\n      this.setState({ isLoggedIn: false })\r\n    }\r\n  }\r\n\r\n  logout = async () => {\r\n    try {\r\n      await request.postJSON('/logout', {})\r\n      this.setState({ isLoggedIn: false })\r\n    } catch(e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  render (){\r\n  const { classes } = this.props;\r\n  let logEle\r\n  if (this.state.isLoggedIn) {\r\n    logEle = <div className=\"logout\" onClick={this.logout}>退出登录</div>\r\n  } else {\r\n    logEle = <div className=\"link-wrapper\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/signin/\">SignIn</Link>\r\n      <Link to=\"/signup/\">SignUp</Link>\r\n    </div>\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Router>\r\n      <AppBar position=\"static\" >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n          </Typography>\r\n          {logEle}\r\n        </Toolbar>\r\n      </AppBar>\r\n        <Route path=\"/\" exact component={MyFirstGrid} />\r\n        <Route path=\"/signin/\" component={SignIn} />\r\n        <Route path=\"/signup/\" component={SignUp} />\r\n      </Router>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);","import React from 'react';\nimport './App.css';\n\nimport Layout from './components/Layout'\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: blue,\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n          <Layout />\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}